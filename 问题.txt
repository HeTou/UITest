1、Execution failed for task ':testlib:createDebugAndroidTestCoverageReport'.
  > java.io.IOException: No coverage data to process in directories [F:\Android\myself\UIUnitTest\testlib\build\outputs\code_coverage\debugAndroidTest\connected]
  这里注意需要先执行 connectedDebugAndroidTest 再 createDebugCoverageReport

2、java.lang.RuntimeException: Failed to initialize JaCoCo.
Caused by: java.io.FileNotFoundException: /jacoco.exec: open failed: EROFS (Read-only file system)
  在androidTest>
         resources>
              jacoco-agent.properties> 内容：output=none


3、在app运行阶段出现Failed to initialize JaCoCo.
  在main>
         resources>
              jacoco-agent.properties> 内容：output=none

4、注意：当打包lib成aar的时候，记得要先去掉代码覆盖率的配置，不然代码会存在jacoco的代码，就可能会报上面第三点的错误


5、模拟 final class
  自从Mockito v2 以来可以模拟final class, 这个功能目前正在优化阶段,并且默认是停用的.要想激活final class,在src/test/resources/mockito-extensions/或者src/mockito-extensions/目录创建名为org.mockito.plugins.MockMaker的文件,并在文件中添加一行:
  mock-maker-inline

6、AGP4.1以后，当testCoverageEnabled = true,unittest会报错 java.lang.instrument.IllegalClassFormatException: Error while instrumenting com/example/testlib/pesenter/MainPesenter.
   需要使用jacoco0.8.5版本即可以生成覆盖率，忽略报错信息（为啥？试出来的）
